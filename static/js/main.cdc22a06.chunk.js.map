{"version":3,"sources":["components/RssReaderApp.module.css","classes/Feed.js","components/RssFeeds.js","components/RssArticle.js","components/RssArticleViewer.js","components/AboutMe.js","components/RssReaderApp.js","App.js","serviceWorker.js","index.js","components/RssFeeds.module.css","components/RssArticle.module.css"],"names":["module","exports","Feed","name","url","this","key","Date","toISOString","isEnabled","shortenedUrl","length","substring","RssFeeds","props","onRssUrlEnterChanged","e","target","value","item","rssItems","find","errorMessage","isRssLink","setState","newRssUrl","urlError","onRssNameEnterChanged","newRssName","nameError","onNewRssUrlEntered","preventDefault","feed","state","onRssItemAdd","onFeedEnabledChange","onRssItemEnabled","string","regex","RegExp","match","className","styles","error","feedTitle","Form","onSubmit","Row","Col","md","Control","type","onChange","placeholder","required","Button","variant","disabled","block","list","ListGroup","map","Item","feedName","showHideFeed","Check","inline","defaultChecked","title","deleteButton","size","onClick","onRssItemDelete","Component","RssArticle","articleDate","article","isoDate","date","toDateString","toLocaleTimeString","href","link","rel","content","pageSizeSelectStyle","display","alignItems","pageText","textAlign","RssArticleViewer","onPageChanged","page","onPageSizeChange","pageSize","getPagination","items","totalPages","articles","i","push","Pagination","active","renderArticles","pageArticles","slice","guid","renderPagination","firstIdx","lastIdx","style","as","pageSizes","p","renderLoading","Spinner","animation","role","loading","aboutMeStyle","AboutMe","Container","Parser","require","ls","RssReaderApp","getRssFeeds","rssFeeds","get","getArticles","onRssFeedAdd","rssFeed","set","onRssFeedDelete","rssItem","index","indexOf","updatedRssItems","splice","onRssFeedEnabled","parser","promises","filter","parseURL","res","Navbar","bg","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","path","fluid","right","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.cdc22a06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"right\":\"RssReaderApp_right__1UEgV\"};","class Feed {\n  constructor(name, url) {\n    this.url = url;\n    this.key = `${url}_${new Date().toISOString()}`;\n    this.isEnabled = true;\n    this.name = name;\n    this.shortenedUrl = this.url.length < 50 ? this.url : `${this.url.substring(0,47)}...`;\n  }\n}\n\nexport default Feed;\n","import React, { Component } from 'react';\nimport { Button, Col, Form, ListGroup } from 'react-bootstrap';\nimport styles from './RssFeeds.module.css';\nimport Feed from '../classes/Feed';\nimport { Trash } from 'react-bootstrap-icons';\n\nclass RssFeeds extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n       newRssUrl: '',\n       newRssName: '',\n       urlError: '',\n       nameError: '',\n    }\n  }\n\n  onRssUrlEnterChanged = e => {\n    const url = e.target.value;\n    const item = this.props.rssItems.find(item => item.url === url);\n    let errorMessage = '';\n    if(!this.isRssLink(url)) {\n      errorMessage = 'Please enter a valid URL';\n    } else if (item) {\n      errorMessage = 'Feed already exists';\n    }\n    this.setState({\n      newRssUrl: url,\n      urlError: errorMessage,\n    });\n  }\n\n  onRssNameEnterChanged = e => {\n    const name = e.target.value;\n    const item = this.props.rssItems.find(item => item.name === name);\n    const errorMessage = item ? 'Name already taken please enter a different name' : '';\n    this.setState({\n      newRssName: name,\n      nameError: errorMessage,\n    });\n  }\n\n  onNewRssUrlEntered = e => {\n    e.preventDefault();\n    const feed = new Feed(this.state.newRssName, this.state.newRssUrl);\n    this.props.onRssItemAdd(feed);\n    this.setState({\n      newRssUrl: '',\n      newRssName: '',\n    });\n  }\n\n  onFeedEnabledChange = item => {\n    this.props.onRssItemEnabled(item);\n  }\n\n  isRssLink(string) {\n    const expression = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)?/gi;\n    const regex = new RegExp(expression);\n    return string.match(regex);\n  }\n\n  render() {\n    const urlError = this.state.urlError ? <div className={`${styles.error} pt-1 pt-1`}>{this.state.urlError}</div> : '';\n    const nameError = this.state.nameError ? <div className={`${styles.error} pt-1 pt-1`}>{this.state.nameError}</div> : '';\n    return (\n      <div>\n        <div className={styles.feedTitle}>Feeds</div>\n        <Form onSubmit={this.onNewRssUrlEntered} className='pt-1 pb-3'>\n          <Form.Row>\n            <Col md={12} className=\"pt-2\">\n              <Form.Control type=\"text\" value={this.state.newRssUrl} onChange={this.onRssUrlEnterChanged} placeholder=\"Enter Rss Feed Url\" required/>\n              {urlError}\n            </Col>\n            <Col md={12} className=\"pt-2\">\n              <Form.Control type=\"text\" value={this.state.newRssName} onChange={this.onRssNameEnterChanged} placeholder=\"Enter Rss Feed Name\" required/>\n              {nameError}\n            </Col>\n            <Col md={12} className=\"pt-2\">\n              <Button variant=\"primary\" type=\"submit\" disabled={urlError || nameError} block>Submit</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n        <div className={styles.list}>\n          <ListGroup>\n          {this.props.rssItems.map(item => \n            (<ListGroup.Item key={item.key} className={`mb-2 ${item.isEnabled ? \"\" : \"item-disabled\"}`}>\n              <div>\n                <span className={styles.feedName}>{item.name}</span>\n                <span className={styles.showHideFeed}>\n                  <span>{item.isEnabled ? \"Hide Feeds\" : \"Show Feeds\"}</span>\n                  <Form.Check\n                    inline\n                    type=\"checkbox\"\n                    defaultChecked={item.isEnabled}\n                    onChange={() => this.onFeedEnabledChange(item)}\n                  />\n                </span>\n              </div>\n              <div>\n                <span className={styles.url} title={item.url}>{item.shortenedUrl}</span>\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                <span>\n                  <Button className={styles.deleteButton} variant=\"danger\" size=\"sm\" onClick={(e) => this.props.onRssItemDelete(item)}><Trash/></Button>\n                </span>\n              </div>\n            </ListGroup.Item>)\n          )}\n          </ListGroup>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default RssFeeds\n","import React, { Component } from 'react'\nimport { BoxArrowUpRight } from 'react-bootstrap-icons';\nimport styles from './RssArticle.module.css';\n\nexport class RssArticle extends Component {\n  constructor(props) {\n    super(props)\n    this.articleDate = new Date(this.props.article.isoDate);\n  }\n  \n  render() {\n    return (\n      <div className={`${styles.article} pt-2`}>\n        <div className=\"pb-1\">\n          <span className={styles.title}>{this.props.article.title}</span>\n          <span className={`${styles.date} ml-2`}>\n            {`${this.articleDate.toDateString()} ${this.articleDate.toLocaleTimeString()}`}\n          </span>\n          <a href={this.props.article.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"ml-2\"><BoxArrowUpRight /></a>\n        </div>\n        <p>{this.props.article.content}</p>\n      </div>\n    )\n  }\n}\n\nexport default RssArticle\n","import React, { Component } from 'react'\nimport { Col, Form, Pagination, Row, Spinner } from 'react-bootstrap';\nimport RssArticle from './RssArticle';\n\nconst pageSizeSelectStyle = {\n  display: \"flex\",\n  alignItems: \"center\",\n};\n\nconst pageText = {\n  textAlign: \"center\",\n};\n\nclass RssArticleViewer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n       pageSize: 10,\n       page: 1,\n       articles: [],\n    }\n    this.pageSizes = [10, 25, 50, 100];\n  }\n\n  onPageChanged = (page) => {\n    this.setState({\n      page\n    });\n  }\n\n  onPageSizeChange = (e) => {\n    this.setState({\n      pageSize: +e.target.value\n    });\n  }\n\n  getPagination = () => {\n    const items = [];\n    const totalPages = this.props.articles.length % this.state.pageSize ?\n      this.props.articles.length / this.state.pageSize + 1 :\n      this.props.articles.length / this.state.pageSize;\n    for (let i = 1; i <= totalPages; i++) {\n      items.push(\n        <Pagination.Item key={i} active={i === this.state.page} onClick={() => this.onPageChanged(i)}>\n          {i}\n        </Pagination.Item>,\n      );\n    }\n    return items;\n  }\n\n  renderArticles = () => {\n    const pageArticles = this.props.articles.slice((this.state.page - 1) * this.state.pageSize, this.state.page * this.state.pageSize);\n    if(!pageArticles.length) {\n      return (<div>No articles to display!</div>)\n    } else {\n      return (\n        <div>\n          {pageArticles.map(article => (<RssArticle key={article.guid} article={article}/>))}\n          {this.renderPagination()}\n        </div>\n      )\n    }\n  }\n\n  renderPagination = () => {\n    const firstIdx = (this.state.page - 1) * this.state.pageSize + 1;\n    const lastIdx = (this.state.page - 1) * this.state.pageSize + this.state.pageSize;\n    return (\n      <Row className=\"mt-3\">\n        <Col md={4}>\n          <Pagination>{this.getPagination()}</Pagination>\n        </Col>\n        <Col md={4}>\n          <div style={pageText}>{`Viewing ${firstIdx} - ${lastIdx} of ${this.props.articles.length}`}</div>\n        </Col>\n        <Col md={4}>\n          <div style={pageSizeSelectStyle}>\n            <span>Show&nbsp;&nbsp;</span>\n            <Form.Control as=\"select\" value={this.state.pageSize} onChange={this.onPageSizeChange}>\n              {this.pageSizes.map(p => (<option>{p}</option>))}\n            </Form.Control>\n            <span>&nbsp;&nbsp;Feeds</span>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n\n  renderLoading = () => {\n    return (\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.loading ? this.renderLoading() : (this.renderArticles())}\n      </div>\n    )\n  }\n}\n\nexport default RssArticleViewer\n","import React, { Component } from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\n\nconst aboutMeStyle = {\n  textAlign: \"left\",\n};\n\nclass AboutMe extends Component {\n  render() {\n    return (\n      <Container className=\"pt-2\" style={aboutMeStyle}>\n        <Row>\n          <Col md={12} >\n            <h3>About</h3>\n            <p>\n              This site is a simple <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://en.wikipedia.org/wiki/RSS#:~:text=RSS%20(RDF%20Site%20Summary%20or,in%20a%20single%20news%20aggregator.\">RSS</a> Reader app.\n            Most news website or blogs will have one or more RSS Feed, which contains the latest articles on that website.\n            Simply include the RSS link into this App and it will display the articles' summary here. An external link to the original site is shown should one decide to peruse the article at length.\n            Feeds are stored in your browser's storage - feeds can't be retrieve if using incognito mode or another browser.\n            </p>\n            <p>\n              Websites nowadays are bloated and slow to load due to the large number of advertisements, images and analytics loaded each page.\n              While installing an <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chrome.google.com/webstore/detail/adblock-%E2%80%94-best-ad-blocker/gighmmpiobklfepjocnamgkkbiglidom\">ad blocker</a> does circumvent this problem, more and more news sites are preventing us from reading articles till the ad blocker is disabled.\n              Sometimes all we want is quick, fuss free summary of the news at a glance and thats where this App comes in! Hope you enjoy the App!\n            </p>\n            <p>\n              This site is created using <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://reactjs.org/\">React</a> and <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://react-bootstrap.netlify.app/\">ReactBootStrap</a> for styling. Other packages used are noted below:\n              <ul>\n                <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://reactrouter.com/\">React Router</a></li>\n                <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.npmjs.com/package/rss-parser\">Rss Feed Parser</a></li>\n                <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.npmjs.com/package/local-storage\">Browser Local Storage</a></li>\n              </ul>\n\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default AboutMe\n","import React, { Component } from 'react'\nimport RssFeeds from './RssFeeds';\nimport RssArticleViewer from './RssArticleViewer';\nimport AboutMe from './AboutMe';\nimport { Container, Row, Col, Navbar, Nav } from 'react-bootstrap';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport styles from './RssReaderApp.module.css';\n\nconst Parser = require('rss-parser');\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\nconst ls = require('local-storage');\nconst rssKey = 'rssKey';\n\nclass RssReaderApp extends Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n       rssFeeds: [],\n       articles: [],\n       loading: false,\n    }\n    this.parser = new Parser();\n  }\n\n  componentDidMount() {\n    this.getRssFeeds();\n  }\n\n  getRssFeeds = () => {\n    this.setState({\n      rssFeeds: ls.get(rssKey) || [],\n    }, () => this.getArticles(this.state.rssFeeds));\n  }\n\n  onRssFeedAdd = rssFeed => {\n    this.setState({\n      rssFeeds: [...this.state.rssFeeds, rssFeed],\n    }, () => {\n      ls.set(rssKey, this.state.rssFeeds);\n      this.getArticles(this.state.rssFeeds);\n    });\n  }\n\n  onRssFeedDelete = rssItem => {\n    const index = this.state.rssFeeds.map(item => item.key).indexOf(rssItem.key);\n    const updatedRssItems = [...this.state.rssFeeds];\n    updatedRssItems.splice(index, 1);\n    this.setState({\n      rssFeeds: updatedRssItems,\n    }, () => {\n      ls.set(rssKey, this.state.rssFeeds);\n      this.getArticles(this.state.rssFeeds);\n    });\n  }\n\n  onRssFeedEnabled = rssItem => {\n    const index = this.state.rssFeeds.map(item => item.key).indexOf(rssItem.key);\n    const updatedRssItems = [...this.state.rssFeeds];\n    updatedRssItems[index].isEnabled = !updatedRssItems[index].isEnabled;\n    this.setState({\n      rssFeeds: updatedRssItems,\n    }, () => {\n      ls.set(rssKey, this.state.rssFeeds);\n      this.getArticles(this.state.rssFeeds);\n    });\n  }\n\n  async getArticles(rssFeeds) {\n    this.setState({\n      loading: true,\n    });\n    const promises = rssFeeds\n      .filter(feed => feed.isEnabled)\n      .map(feed => this.parser.parseURL(`${CORS_PROXY}${feed.url}`));\n    const articles = [];\n    for(let i = 0; i < promises.length; i++) {\n      try {\n        const res = await promises[i];\n        articles.push(...res.items);\n      } catch (err) {\n      }\n    }\n    this.setState({\n      articles,\n      loading: false,\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">RSS Reader</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\"></Nav>\n            <Nav>\n              <Nav.Link href=\"/about\">About</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Switch>\n          <Route path=\"/about\">\n            <AboutMe></AboutMe>\n          </Route>\n          <Route path=\"/\">\n            <Container fluid className=\"pt-2\">\n            <Row>\n              <Col md={3} id=\"feed-col\">\n                <RssFeeds\n                  rssItems={this.state.rssFeeds}\n                  onRssItemAdd={rssItem => this.onRssFeedAdd(rssItem)}\n                  onRssItemDelete={rssItem => this.onRssFeedDelete(rssItem)}\n                  onRssItemEnabled={rssItem => this.onRssFeedEnabled(rssItem)}\n                />\n              </Col>\n              <Col className={styles.right} md={9}>\n                <RssArticleViewer\n                  articles={this.state.articles}\n                  loading={this.state.loading}\n                />\n              </Col>\n            </Row>\n            </Container>\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default RssReaderApp\n","import React from 'react';\nimport './App.css';\nimport RssReaderApp from './components/RssReaderApp'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RssReaderApp/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"RssFeeds_error__2YnO7\",\"url\":\"RssFeeds_url__2kUc6\",\"feedTitle\":\"RssFeeds_feedTitle__1ldOn\",\"list\":\"RssFeeds_list__27z-o\",\"feedName\":\"RssFeeds_feedName__S034R\",\"showHideFeed\":\"RssFeeds_showHideFeed__1TACM\",\"deleteButton\":\"RssFeeds_deleteButton__1YZBc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"RssArticle_date__2sSgf\",\"article\":\"RssArticle_article__EVNr9\",\"title\":\"RssArticle_title__vDtgN\"};"],"sourceRoot":""}